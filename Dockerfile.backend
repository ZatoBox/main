# Minimum base image for Python backend
FROM python:3.11-slim AS base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

WORKDIR /app

# System dependencies required only for building packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    build-essential \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Non-root user (alineado con OCR)
RUN groupadd -r app && useradd -r -g app app

FROM base AS builder

WORKDIR /app

# Copy requirements.txt
COPY backend/zato-csm-backend/requirements.txt ./requirements.txt

# Create venv and install dependencies
RUN python -m venv /opt/venv \
    && . /opt/venv/bin/activate \
    && pip install --upgrade pip setuptools wheel \
    && pip install --no-cache-dir -r requirements.txt uvicorn[standard]

FROM base AS final

# Bring venv from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:${PATH}"

# Copy application code
COPY backend/zato-csm-backend/ ./

# Permisos y usuario no root
RUN chown -R app:app /app
USER app

EXPOSE 4444

# Simple healthcheck (adjust port if needed)
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD python -c "import socket,sys; s=socket.socket(); s.settimeout(2); \
        try: s.connect(('127.0.0.1',4444)); s.close(); \
        except: sys.exit(1)" || exit 1

# Uvicorn en 4444, entrypoint run:main
CMD ["uvicorn", "run:main", "--host", "0.0.0.0", "--port", "4444"]