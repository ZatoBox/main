worker_processes auto;
worker_rlimit_nofile 1024;

events {
    worker_connections 512;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # OPTIMIZACIONES PARA POCA MEMORIA
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 15;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # COMPRESIÓN LIVIANA
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript;
    
    # LOGS MÍNIMOS
    access_log off;
    error_log /var/log/nginx/error.log warn;
    
    # PROXY PARA BACKEND
    upstream backend {
        server backend-ocr:5000;
        keepalive 2;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # CORS Headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        # OPTIONS preflight
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # API Backend
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_buffering off;
        }
        
        # Docs
        location /docs {
            proxy_pass http://backend;
            proxy_set_header Host $host;
        }
        
        # Health check
        location /health {
            proxy_pass http://backend;
            proxy_set_header Host $host;
        }
        
        # Frontend (si existe)
        location / {
            try_files $uri $uri/ @backend;
        }
        
        location @backend {
            proxy_pass http://backend;
            proxy_set_header Host $host;
        }
    }
}