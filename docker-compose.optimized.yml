version: '3.8'

services:
  backend-ocr:
    build: .
    ports:
      - "8001:5000"
    environment:
      - FLASK_ENV=production
      - REDIS_URL=redis://redis:6379/0
      - MAX_CONTENT_LENGTH=50000000
    volumes:
      - ./models:/app/models
      - ./yolov5:/app/yolov5
      - ./datasets:/app/datasets
    depends_on:
      - redis
    restart: unless-stopped
    # OPTIMIZACIÓN DE MEMORIA
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    # CONFIGURACIÓN REDIS OPTIMIZADA PARA POCA MEMORIA
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru --save "" --appendonly no
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M
    sysctls:
      - net.core.somaxconn=1024
    
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "5173:80"  # Para el frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend-ocr
    restart: unless-stopped
    # NGINX LIVIANO
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 32M

networks:
  default:
    name: ocr-network